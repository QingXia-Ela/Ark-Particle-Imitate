class Point{constructor(orx,ory,size,colorNum=0,canvas,cancelRandPlace=false){this.orx=orx;this.ory=ory;this.size=size;this.x=cancelRandPlace?orx:Math.random()*canvas.width;this.y=cancelRandPlace?ory:Math.random()*canvas.height;this.nx=orx;this.ny=ory;this.spx=0;this.spy=0;this.opacity=cancelRandPlace?1:0;this.canvas=canvas;let c=Math.floor(colorNum/3);this.color=`${c},${c},${c}`}update(ParticlePolymerizeFlag=true,options,mx,my){const{Thickness,Drag,Ease,effectParticleMode}=options;this.spx=(this.nx-this.x)/(ParticlePolymerizeFlag?30:60);this.spy=(this.ny-this.y)/(ParticlePolymerizeFlag?30:60);let curDx=(mx-this.x),curDy=(my-this.y);let d1=curDx*curDx+curDy*curDy;let f=Thickness/d1;f=f<0.1?0.1:f;let finalT=0;if(effectParticleMode=='adsorption'){f=f>12?12:f;if(f>0.5&&f<=1.5)f=0.5}else if(effectParticleMode=='repulsion'){f=f>7?7:f}finalT=Math.atan2(curDy,curDx);let vx=f*Math.cos(finalT),vy=f*Math.sin(finalT);if(effectParticleMode){let finalX=((effectParticleMode==='adsorption'?vx:-vx)*Drag)+((this.orx-this.x)*Ease)/400,finalY=((effectParticleMode==='adsorption'?vy:-vy)*Drag)+((this.ory-this.y)*Ease)/400;this.spx+=finalX;this.spy+=finalY}if(!ParticlePolymerizeFlag&&this.opacity>0){this.x-=this.spx;this.opacity-=0.04;if(this.opacity<=0){this.x=this.nx;this.y=this.ny}}else{this.x+=this.spx;if(this.opacity<1)this.opacity+=0.012}if(!ParticlePolymerizeFlag&&this.opacity>0){this.y-=this.spy}else{this.y+=this.spy}}render(){const ctx=this.canvas.getContext('2d')ctx.beginPath();ctx.arc(this.x,this.y,this.size,0,360);ctx.fillStyle=`rgba(${this.color},${this.opacity>1?1:this.opacity})`;ctx.fill();ctx.closePath()}}class DameDaneParticle{constructor(canvas,options,callback){const initOptions={renderX:0,renderY:0,spacing:1,size:1,Drag:0.95,Ease:0.1,Thickness:50,validColor:{min:300,max:765,invert:false},cancelParticleAnimation:false}for(const i in initOptions){if(typeof options[i]==='undefined')options[i]=initOptions[i]}options.Thickness*=options.Thickness;const{src}=options;this.w=canvas.width,this.h=canvas.height;this.canvasEle=canvas;this.ctx=canvas.getContext('2d');canvas.width=window.innerWidth;canvas.height=window.innerHeight;this.IMG=new Image();this.IMG.src=src;this.ImgW=0,this.ImgH=0;this.PointArr=[];this.ParticlePolymerizeFlag=true;this.animeId=-1;this.mx=0;this.my=0;this.hasInit=false;this.options=options;this.IMG.onload=()=>{const{renderX,renderY,w,h}=this.options;this.renderX=renderX;this.renderY=renderY;if(typeof w==='number')this.ImgW=w;else this.ImgW=this.IMG.width;if(typeof h==='number')this.ImgH=h;else this.ImgH=Math.floor(this.ImgW*(this.IMG.height/this.IMG.width));const ele=document.createElement('canvas');ele.width=this.ImgW;ele.height=this.ImgH;const eleCtx=ele.getContext('2d');eleCtx.drawImage(this.IMG,0,0,this.ImgW,this.ImgH);this._imgArr=eleCtx.getImageData(0,0,this.ImgW,this.ImgH).data;eleCtx.clearRect(0,0,canvas.width,canvas.height);this._InitParticle(this._imgArr,true);this._Draw2Canvas();this.hasInit=true;callback&&callback()}this.$changeMxMy=_.throttle((e)=>{const cRect=canvas.getBoundingClientRect();this.mx=e.clientX-cRect.left+3;this.my=e.clientY-cRect.top+3},20)canvas.addEventListener("mousemove",this.$changeMxMy);this.$fit=_.throttle(()=>{canvas=this.canvasEle;canvas.width=window.innerWidth;canvas.height=window.innerHeight;this._InitParticle()},10)window.addEventListener('resize',this.$fit)}_InitParticle=(ImgData,rebuildParticle=false)=>{if(!ImgData)ImgData=this._imgArr;let imgW=this.ImgW,imgH=this.ImgH,cnt=0;let arr=this.PointArr;let{spacing,size,validColor,cancelParticleAnimation}=this.options,proportion=window.innerHeight/window.outerHeight;spacing*=proportion>0.5?proportion:0.5;let r,g,b,val,position;const gap=4;for(var h=0;h<imgH;h+=gap){for(var w=0;w<imgW;w+=gap){position=(imgW*h+w)*4;r=ImgData[position],g=ImgData[position+1],b=ImgData[position+2];val=r+g+b if((validColor.invert&&(val<=validColor.min||val>=validColor.max))||(!validColor.invert&&val>=validColor.min&&val<=validColor.max)){if(arr[cnt]&&!cancelParticleAnimation){const point=arr[cnt];point.orx=point.nx=w*spacing+this.renderX;point.ory=point.ny=h*spacing+this.renderY;let c=Math.floor(val/3);point.color=`${c},${c},${c}`}else arr[cnt]=new Point(w*spacing+this.renderX,h*spacing+this.renderY,size,val,this.canvasEle,this.hasInit||cancelParticleAnimation);cnt++}}}if(cnt<arr.length)this.PointArr=arr.splice(0,cnt);if(rebuildParticle&&!cancelParticleAnimation){arr=this.PointArr;let len=arr.length,randIndex=0,tx=0,ty=0;while(len){randIndex=(Math.floor(Math.random()*len--));tx=arr[randIndex].orx,ty=arr[randIndex].ory;arr[randIndex].orx=arr[randIndex].nx=arr[len].orx,arr[randIndex].ory=arr[randIndex].ny=arr[len].ory;arr[len].orx=arr[len].nx=tx,arr[len].ory=arr[len].ny=ty}}if(!this.ParticlePolymerizeFlag)this.ParticlePolymerize(false)}_Draw2Canvas=()=>{cancelAnimationFrame(this.animeId);const w=this.canvasEle.width,h=this.canvasEle.height;this.ctx.clearRect(0,0,w,h);this.PointArr.forEach((point)=>{point.update(this.ParticlePolymerizeFlag,this.options,this.mx,this.my);point.render()})this.animeId=requestAnimationFrame(this._Draw2Canvas)}ParticlePolymerize(flag){if(typeof flag==='boolean')this.ParticlePolymerizeFlag=flag;else this.ParticlePolymerizeFlag=!this.ParticlePolymerizeFlag;this.PointArr.forEach((point)=>{point.nx=this.ParticlePolymerizeFlag?point.orx:Math.random()*this.canvasEle.width;point.ny=this.ParticlePolymerizeFlag?point.ory:Math.random()*this.canvasEle.height})}ChangeImg(src,options){this.IMG.src=src;if(options){for(const i in options){this.options[i]=options[i]}}}PreDestory(callback){this.canvasEle.removeEventListener('mousemove',this.$changeMxMy);window.removeEventListener('resize',this.$fit);cancelAnimationFrame(this.animeId);this.PointArr=[];this.ctx.clearRect(0,0,this.canvasEle.width,this.canvasEle.height);callback&&callback()}}